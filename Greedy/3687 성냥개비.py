# 성냥개비는 숫자를 나타내기에 아주 이상적인 도구이다. 보통 십진수를 성냥개비로 표현하는 방법은 다음과 같다.
# 성냥개비의 개수가 주어졌을 때, 성냥개비를 모두 사용해서 만들 수 있는 가장 작은 수와 큰 수를 찾는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 테스트 케이스의 개수가 주어진다. 테스트 케이스는 최대 100개 이다. 각 테스트 케이스는 한 줄로 이루어져 있고, 성냥개비의 개수 n이 주어진다. (2 ≤ n ≤ 100)
# 출력
# 각 테스트 케이스에 대해서 입력으로 주어진 성냥개비를 모두 사용해서 만들 수 있는 가장 작은 수와 가장 큰 수를 출력한다. 두 숫자는 모두 양수이어야 하고, 숫자는 0으로 시작할 수 없다.

"""
숫자 당 성냥개비 갯수
1 -> 2
2 -> 5
3 -> 5
4 -> 4
5 -> 5
6 -> 6
7 -> 3
8 -> 7
9 -> 6
0 -> 6

In :
4
3
6
7
15

Out :
7 7
6 111
8 711
108 7111111

큰 값을 만들 때는 첫 글자로 7이 가장 효율이 좋고 나머지는 1로 채우는 것이 좋음, 만약 1로 하기 전에 남는다면 그 값이 7보다 클 경우 4보다 앞에, 아니면 7보다 뒤로 설정!
작은 값은 가장 많은 성냥(8)을 이용하는 것이 좋을듯
"""
import sys

case_dict = {2:[1],3:[7],4:[4],5:[2,3,5],6:[0,6],7:[8]}

for _ in range(int(sys.stdin.readline())) :
    amount = int(sys.stdin.readline())
    if amount == 2 :
        print(case_dict[2][0],case_dict[2][0])
    elif amount == 3 :
        print(case_dict[3][0], case_dict[3][0])
    else :
        if amount in case_dict.keys() : # 최소값 찾기
            if amount == 6 :
                minval = 6
            else:
                minval = case_dict[amount][0]

        # 최댓값 찾기
        val_7 = amount // 3
        if (amount % 3) % 2 == 0 : # 끝까지 1인 경우
            val_1 = (amount % 3) // 2
        else:
            val_1 = 0

        max_val = str(val_7)*7 + str(val_1)*1
        print(minval,max_val)
