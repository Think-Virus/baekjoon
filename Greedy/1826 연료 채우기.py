# 성경이는 트럭을 정글 속에서 운전하다가 트럭의 연료탱크에 갑자기 구멍이 나서 1km를 가는데 1L의 연료가 새 나가게 되었다.
# 이것을 고치기 위해서는 가장 가까운 마을에 가야 한다. 그런데 그냥 가다가는 중간에 연료가 다 빠질 수가 있다.
# 다행스럽게도 정글 곳곳에 연료를 채울 수 있는 주유소가 N개 있다.
# 그런데 정글 속에서 중간에 차를 멈추는 행위는 매우 위험한 행위이므로 주유소에서 멈추는 횟수를 최소화 하려 한다.
# 그리고 다행이도 성경이의 트럭은 매우 좋아서 연료 탱크에는 연료의 제한이 없이 많이 충분히 많이 넣을 수 있다고 한다.
# 각각의 주유소의 위치와, 각 주유소에서 얻을 수 있는 연료의 양이 주어져 있을 때, 주유소에서 멈추는 횟수를 구하는 프로그램을 작성하시오.
# 정글은 일직선이고, 성경이의 트럭과 주유소도 모두 일직선 위에 있다.
# 주유소는 모두 성경이의 트럭을 기준으로 오른쪽에 있다.

# 입력 :
# 첫째 줄에 주유소의 개수 N(1 ≤ N ≤ 10,000)가 주어지고
# 두 번째 줄부터 N+1번째 줄 까지 주유소의 정보가 주어진다.
# 주유소의 정보는 두개의 정수 a,b로 이루어 져 있는데
# a(1 ≤ a ≤ 1,000,000)는 성경이의 시작 위치에서 주유소 까지의 거리,
# 그리고 b(1 ≤ b ≤ 100)는 그 주유소에서 채울 수 있는 연료의 양을 의미한다.
# 그리고 N+2번째 줄에는 두 정수 L과 P가 주어지는데 L(1 ≤ L ≤ 1,000,000)은 성경이의 위치에서 마을까지의 거리,
# P(1 ≤ P ≤ 1,000,000)는 트럭에 원래 있던 연료의 양을 의미한다.

"""
In :
4
4 4
5 2
11 5
15 10
25 10

Out :
3

일단 현재 있는 연료의 양 + 추가될 연료의 양 하면 L보다는 커야 함
목적지에 도달할 수 있어야 함

연료를 최소 heap으로 넣고 도달할 수 없는 그 마지막까지 확인한 후에 그게 계속 주유소에 충전할 수 있지 확인..?
"""

"""
정답 확인
핵심 아이디어 : 내가 가진 기름으로 갈 수 있는 주유소 중 가장 많은 기름을 채울 수 있는 주유소를 방문해야한다.

1. 입력으로 받는 주유소 정보(주유소까지의 거리, 채울수있는 연료의 양)를 주유소까지의 거리를 기준으로 최소힙에 담는다.

2. 현재 위치에서 내가 가진 기름으로 마을에 도착할 수 있거나 더이상 움직일 수 없을때까지 순회하면서

3. 내가 가진 기름이 10 이라면 (주유소까지의거리 - 현재위치)  <= 10 이하인 주유소 정보를 꺼낸 후(pop) 각 주유소의 채울 수 있는 연료의 양 기준 최대힙에 담아준다. 
예를들어 주유소까지의거리 가 10인데 내 현재위치가 4 면 6의 기름만 보유하고있어도 되기 때문에  (주유소까지의거리 - 현재위치) 를 하는것이다.
내가 현재 기름으로 도달할 수 없는 주유소를 만나면 그대로 loop 를 종료한다. 
거리순으로 최소힙에 담겨있기때문에 이후는 모두 현재 보유한 기름으로 갈 수 없는 주유소이기 때문에 더이상 확인할 필요 없다.

4. 최대힙에 현재 내가 보유한 기름으로 갈 수 있는 주유소들이 들어있다. 
이 중 가장 많은 기름을 주유할 수 있는 곳을 방문해야하므로 하나만 pop 해서 방문횟수(ans)에 +1 한 후,
내 현재 위치(current_pos)를 pop한 주유소의 위치로 수정.
내 보유 기름에서 pop한 주유소까지 이동한 거리만큼 보유 기름 감소
내 보유 기름에서 pop한 주유소에서 채울수 있는 연료의 양만큼 보유 기름 증가
위 과정을 반복하다가 더이상 방문할 주유소가 없는 경우(gas_heap 에 데이터가 없는 경우)
현재위치에서 내가 가진 기름으로 마을에 도달할 수 없는 경우 마을까지 도달하는것은 불가능하다. -1 출력후 루프 종료

루프 진행중, 현재위치에서 내가가진 기름으로 마을에 도달할 수 있는 경우 더이상 주유소를 확인할 필요없이 바로 현재까지의 방문횟수(ans) 출력후 루프 종료.
"""
import heapq
import sys

N = int(sys.stdin.readline())
gas_stations = []
for _ in range(N):
    # 주유소까지의 거리, 채울수 있는 연료의 양
    a, b = map(int, sys.stdin.readline().split())
    heapq.heappush(gas_stations, (a, -b))

town_distance, my_gas = map(int, sys.stdin.readline().split())

if town_distance <= my_gas:
    print(0)
else:
    ans = 0
    gas_heap = []
    current_pos = 0

    while True:
        if current_pos + my_gas >= town_distance:
            print(ans)
            break

        while gas_stations:
            info = gas_stations[0]
            if info[0] - current_pos <= my_gas:
                distance, gas = heapq.heappop(gas_stations)
                heapq.heappush(gas_heap, (gas, distance))
            else:
                break

        if gas_heap:
            max_gas, d = heapq.heappop(gas_heap)
            my_gas -= d - current_pos
            my_gas -= max_gas
            current_pos = d
            ans += 1
        else:
            if current_pos + my_gas < town_distance:
                print(-1)
                break